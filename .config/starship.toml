# Get editor completions based on the config schema
# "$schema" = 'https://starship.rs/config-schema.json'

# https://i.stack.imgur.com/KTSQa.png ASCII COLOR TABLE

# Which is equivalent to
format = """
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$directory\
$vcsh\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$docker_context\
$buf\
$cmake\
$container\
$dart\
$deno\
$lua\
$nim\
$package\
$nodejs\
$yarn\
$python\
$rlang\
$red\
$rust\
$terraform\
$vlang\
$conda\
$memory_usage\
$env_var\
$custom\
$sudo\
$cmd_duration\
$line_break\
$jobs\
$time\
$status\
$shell\
$character"""

###########################333

# Inserts a blank line between shell prompts
add_newline = true
# Timeout for commands executed by starship
command_timeout=2000

# - GIT
[git_metrics]
disabled = false
added_style = 'bold blue'
format = '[+$added]($added_style)/[-$deleted]($deleted_style) '

[git_state]
cherry_pick = "[üçí PICKING](bold fg:197)" # red

[git_status]
format = """
($conflicted\
$stashed\
$deleted\
$renamed\
$modified\
$staged\
$untracked )\
($ahead_behind )""" # purple
#stashed = "[stash](bold fg:222)" # yellow
staged = "[S](bold fg:222)" # yellow
conflicted = "[=](bold fg:197)" # red
untracked = "[?](bold fg:159)" # cyan
modified = "[!](bold fg:222)" # yellow
deleted = "[‚úò](bold fg:197)" # red
behind = "[‚Üì](bold fg:159)" # cyan
ahead = "[‚Üë](bold fg:159)" # cyan
diverged = "[‚áî](bold fg:197)" # red

[git_branch]
symbol = "Ôêò "
format = '[[$symbol$branch ]()]($style)'
style = "fg:031"

# PROJECT PACKAGE.JSON
[package]
format = "[app[$version](bold $style)]($style) "
version_format = "${raw}"
display_private = true
style = "dimmed fg:118"

# - NODEJS
[nodejs]
symbol = 'nodejs'
version_format = "${raw}" # # Don't show "v3", just "3"
detect_files = ["package.json", ".node-version", "yarn.lock"]
detect_folders = ["node_modules"]
# Unlike the standard nodejs module, it intentionally does not check for
detect_extensions = [] # *.js or *.ts since that triggers too often
format = '- [$symbol([$version](bold $style))]($style)'
style = "dimmed fg:#026e00"

# - YARN
[custom.yarn]
command = 'echo -e "yarn\033[1m$(yarn -v)\033[0m"'
detect_files = ["package.json", ".node-version", "yarn.lock"]
detect_folders = ["node_modules"]
format = ' - [$output]($style)'
style="dimmed fg:#2C8EBB" # Yarns logo color

# - STATUS
[status]
style = ''
symbol = ''
success_symbol = ''
format = '[$status$signal_name$maybe_int]($style) '
map_symbol = true
disabled = false

# - BATTERY
[battery]
full_symbol = "‚Ä¢ "
charging_symbol = "‚á° "
discharging_symbol = "‚á£ "
unknown_symbol = "‚ùì "
empty_symbol = "‚ùó "

[erlang]
symbol = "‚ìî "

[directory]
# Show 1 parent directory (setting to 0 means no truncation)
truncation_length = 2
# A lovely grayish-purple
style = "fg:146"
format = "[$path]($style) "
# When in a Git repo, keep showing parent directories
truncate_to_repo = false

[directory.substitutions]
"Documents" = "Ôúò "
"Downloads" = "ÔÄô "
"Music" = "ÔÄÅ "
"Pictures" = "ÔÄæ "

[aws]
format = 'on [$symbol($profile )(\($region\) )]($style)'
style = 'bold blue'
symbol = 'üÖ∞ '
[aws.region_aliases]
ap-southeast-2 = 'au'
us-east-1 = 'va'
[aws.profile_aliases]
CompanyGroupFrobozzOnCallAccess = 'Frobozz'

[pulumi]
symbol = "üßä "
